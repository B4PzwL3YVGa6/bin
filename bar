#!/bin/bash
#
# http://github.com/mitchweaver/bin
#
# the unholy lemonbar
#

init() {
    # on exit, kill all children
    trap 'pkill -P $$' EXIT
    LC_ALL=""

    . ${HOME}/.cache/wal/colors.sh

    [ -d /tmp/bar ] && rm -rf /tmp/bar
    mkdir -p /tmp/bar

    # wait for dwm to start
    while ! pgrep dwm > /dev/null ; do
        sleep 0.1
    done

    # if zero, bar is disabled
    [ $(< /tmp/dwm_info/bar_height) -eq 0 ] && exit

    echo 1 > /tmp/dwm_info/check

    num_ws=$(< /tmp/dwm_info/num_ws)

    res="$(xrandr --nograb --current | awk '/\*/ {print $1}')"
    res=${res% *}
    sw=${res%x*}
    sh=${res#*x}
    sw=${sw%.*}
    sh=${sh%.*}

    gap=$(< /tmp/dwm_info/gappx)

    w=$(( $sw - $gap * 2 ))
    x=$gap
    h=$(< /tmp/dwm_info/bar_height)
    [ $gap -gt 0 ] && h=$(( $h + ($h / 4) ))

    if [ $(< /tmp/dwm_info/top_bar) -eq 0 ] ; then
        [ $gap -gt 0 ] && 
            y=$(echo "$h / 5" | bc -l) || 
            y=0
    else
        [ $gap -gt 0 ] &&
            y=$(echo "$sh - $h - ($h / 2.5)" | bc -l) ||
            y=$(( $sh - $h ))
    fi

    dash ${HOME}/bin/vol > /tmp/bar/vol

    if [ $gap -eq 0 ] ; then
        ft1="xos4 Terminus:size=8"
        ft2="Symbola:size=10"
        ft3="montecarlo:size=10"
        ft4="TerminusTTF Nerd Font:size=10"
        ft5="TerminusTTF Nerd Font:size=10"
    else
        ft1="xos4 Terminus:size=8"
        ft2="Symbola:size=8"
        ft3="montecarlo:size=8"
        ft4="TerminusTTF Nerd Font:size=10"
        ft5="TerminusTTF Nerd Font:size=10"
    fi

    unset res sw sh gap tmp
}

layout() {
    case $(< /tmp/dwm_info/current_layout) in
        0) echo -n "\\uf44e" ;; # tiled
        1) echo -n "\\ue28e" ;; # floating
        2) echo -n "\\uf10c" ;; # monocle
        3) echo -n "\\uf009" ;; # grid
        4) echo -n "\\uf04c" ;; # center master
        5) echo -n "\\uf247" ;; # center floating master
        6) echo -n "\\uf302" ;; # fibonacci
        7) echo -n "\\uf037" ;; # top master
    esac 2> /dev/null
} 

wksp() {
    if [ $(< /tmp/dwm_info/check) -eq 1 ] ; then
        for i in $(seq $num_ws || jot $num_ws) ; do

            [ $(< /tmp/dwm_info/ws"$i") -eq 1 ] &&
                ws=" %{F$color2}$i%{F-} " ||
                ws=" $i "

            [ $(< /tmp/dwm_info/current_ws) -eq $i ] &&
                ws="%{+u}$ws" ||
                ws="%{-u}$ws"
            buffer=$buffer$ws

        done
        echo -n "$buffer" > /tmp/bar/wksp
        echo -n 0 > /tmp/dwm_info/check
    fi 2> /dev/null
}

vol() { 
    vol="$(< /tmp/bar/vol)"
    case ${vol%??} in
        10|[5-9]) echo -n "\\uf028 $vol" ;;
        [1-4]) echo -n "\\uf027 $vol" ;;
        *) echo -n "\\uf026 $vol"
    esac
}

launch_daemons() {
    # net_daemon
    dash -c 'while true ; do 
        pgrep -x openvpn > /dev/null &&
            echo -n "\\uf023 $(cat /tmp/vpn)" > /tmp/bar/vpn ||
            echo -n "\\uf09c None" > /tmp/bar/vpn

        ping -c 1 -n -q -s 1 -w 10 8.8.8.8 > /dev/null 2>&1 &&
            wifi="\\uf1eb" ||
            wifi="\\uf467"
            ssid="$(dash ~/bin/ssid)"
            [ -n "$ssid" ] &&
                wifi="$wifi $ssid"
        echo -n "$wifi" > /tmp/bar/wifi

        if pgrep -x mpv > /dev/null ; then
            tmpsong=$(dash ${HOME}/bin/song 60 "")
            echo -n $tmpsong > /tmp/bar/song
        elif [ -f /tmp/bar/song ] ; then
            rm /tmp/bar/song -- > /dev/null 2>&1
        fi
        sleep 5
    done' > /dev/null 2>&1 &

    # battery_daemon
    dash -c 'while true ; do
        perc=$(dash ~/bin/bperc)
        if $(case $(uname) in
                Linux)   test $(cat /sys/class/power_supply/AC/online) -eq 1 ;;
                OpenBSD) test $(apm -a) -eq 1
            esac)
        then
            bat="\\uf492" 
        else
            case ${perc%??} in
                [8-9]) bat="\\uf240" ;;
                [6-7]) bat="\\uf241" ;;
                [4-5]) bat="\\uf242" ;;
                [2-3]) bat="\\uf243" ;;
                [0-1]) bat="\\uf244"
            esac
        fi
        echo -n "$bat $perc" > /tmp/bar/bat
        sleep 30
    done' > /dev/null 2>&1 &

    # time_daemon
    dash -c 'while date "+%I:%M %p" > /tmp/bar/date
        do sleep 59
    done' &

    # weather_daemon
    dash -c 'while true ; do
        if curl -s wttr.in/Schmalkalden?m0TQ > /tmp/weather ; then

            set -- $(head -n 2 /tmp/weather)

            if echo "$@" | grep -E [0-9]-- > /dev/null ; then
                a=$(echo $@ | grep -oE -- "-?[0-9]+--")
                b=$(echo $@ | grep -oE -- "--[0-9]+")

                a=${a%??}
                b=$(echo $b | sed "s/--/-/")
            else
                set -- $(echo "$@" | grep -oE -- "-?[0-9]+")
                a=$1
                [ -n "$2" ] &&
                    b=$(echo -n $2 | sed "s/-//")
            fi

            if [ -z "$b" ] ; then
                echo -n "$a°C"
            else
                avg=$(echo $a $b | ${HOME}/bin/local/bin/avg)
                # | sed "s/..$//")
                [ "$avg" = "-0" ] && avg=0
                echo -n "$avg°C"
            fi > /tmp/bar/temp

            case `grep -oE "[a-zA-Z][a-zA-Z ]+" /tmp/weather` in
                *unny*)  echo -n "\\u2600" ;;
                *loudy*|*vercast) echo -n "\\u2601" ;;
                *ain*|*rizzle*) echo -n "\\u2602" ;;
                *og*) echo -n "Fog" ;;
                *ist*) echo -n "Mist" ;;
                *torm*|*ightning) echo -n "Storms" ;;
                *now*) echo -n "Snow" ;;
                *lear*) echo -n "Clear" ;;
                # *) echo -n "$w" | sed "s/,.*//g" | tr -d "\n"
            esac > /tmp/bar/weather 
        fi 
        sleep $(( 60 * 15 ))
    done' &
}

init
launch_daemons

while \
    printf " %s%b%s%b%b%b%b%b%b%s \\n" \
        "$(wksp)$(< /tmp/bar/wksp)%{-u} " \
        "%{T4}$(layout)" \
        "%{c}%{F$color2}%{T3}$(< /tmp/bar/song)%{F-}" \
        "%{r}%{T2}%{T4}[ $(< /tmp/bar/weather) " \
        "$(< /tmp/bar/temp) ]" \
        "[ $(< /tmp/bar/bat) ]" \
        "[ $(< /tmp/bar/wifi) ]" \
        "[ $(< /tmp/bar/vpn) ]" \
        "[ %{T4}$(vol) ]" \
        "[%{F$color2}%{T4} $(< /tmp/bar/date) %{T4}]%{T-}%{F-}"

    do sleep 0.5
done 2> /dev/null | \

lemonbar -db \
         -f "$ft1" \
         -f "$ft2" \
         -f "$ft3" \
         -f "$ft4" \
         -f "$ft5" \
         -g ${w}x${h}+${x}+${y} \
         -n bar \
         -u 2 \
         -U $color2 \
         -B $color0 \
         -F $color1 \
         -a 0 > /dev/null 2>&1
