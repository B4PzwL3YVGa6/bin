#!/usr/bin/env bash

# ---# !/usr/bin/env mksh

# on exit, kill all children
trap 'pkill -P $$' EXIT

if [ ! -d "/tmp/dwm_info" ] ; then

    printf "%s\n%s\n" \
        "dwm isn't running or is misconfigured." \
        "Error: /tmp/dwm_info dir does not exist"
    exit 1

fi
 
# ────────────── init ──────────────────────────────────── #
. ${HOME}/.cache/wal/colors.sh

echo -n 1 > /tmp/dwm_info/check
# underline_pix=6
# underline_pix=4
# underline_pix=3
underline_pix=2
clickable_areas=0

DIM=$(xrandr --nograb --current | grep \* |awk '{print $1}')
s_width="$(sed 's/x.*//' <<< "$DIM")"
s_height="$(sed 's/^[^x]*x//' <<< "$DIM")"

gap=$(< /tmp/dwm_info/gappx)

w=$(echo "$s_width - $gap * 2" | bc)
x=$gap
h=$(echo "$(< /tmp/dwm_info/bar_height)" | bc)
[ $gap -gt 0 ] && h=$(echo "$h + 2" | bc)
[ $(< /tmp/dwm_info/top_bar) -eq 0 ] && 
    { [ $(< /tmp/dwm_info/gappx) -gt 0 ] && y=$(echo "$h / 4.5" | bc) || y=0 ; } ||
    { [ $(< /tmp/dwm_info/gappx) -gt 0 ] && y=$(echo "$s_height - $h - ($h / 2.5)" | bc) || y=$(echo "$s_height - $h" | bc) ; }

# ─────────────────────────────────────────────────────── #
[ -f /tmp/bar ] && rm -rf /tmp/bar > /dev/null 2>&1
mkdir /tmp/bar > /dev/null 2>&1
tmp=$(${HOME}/bin/BSDNixVolume.sh -get)
if [ $tmp -gt 48 ] ; then 
    echo -n "\\uf028%{T3} $tmp%%{T-}" > /tmp/bar/vol
elif [ $tmp -gt 0 ] ; then
    echo -n "\\uf027%{T3} $tmp%%{T-}" > /tmp/bar/vol
else 
    echo -n "\\uf026" > /tmp/bar/vol
fi
[ "$(uname)" = Linux ] &&
    INTERFACE="wlan0" ||
    INTERFACE="iwn0"
# ─────────────────────────────────────────────────────── #

# ─────────────────────────────────────────────────────── #
layout() { 
    case $(< /tmp/dwm_info/current_layout) in
        "0") echo -n "\\uf44e" ;; # tiled
        "1") echo -n "F" ;; # floating
        "2") echo -n "M" ;; # monocle
        "3") echo -n "G" ;; # grid
        "4") echo -n "CMC" ;; # center master
        "5") echo -n "CFM" ;; # center floating master
        "6") echo -n "VVV" ;; # fibonacci
        "7") echo -n "DDD" ;; # top master
    esac
}

# ─────────────────────────────────────────────────────── #
wksp() {
    if [ $(< /tmp/dwm_info/check) -eq 1 ] ; then
        # OPENBSD
        for i in $(jot 13) ; do
            # LINUX
        # for i in $(seq 13) ; do
            [ $(< /tmp/dwm_info/ws"$i") -eq 1 ] &&
                ws=" %{F$color2}$i%{F-} " ||
                ws=" $i "

            [ $(< /tmp/dwm_info/current_ws) -eq $i ] &&
                ws="%{+u}$ws" ||
                ws="%{-u}$ws"
            buffer=$buffer$ws
        done
        echo -n "$buffer" > /tmp/bar/wksp
        echo -n 0 > /tmp/dwm_info/check
    fi
}
# ─────────────────────────────────────────────────────── #

# ────────── background processes ──────────────── #
while true ; do {
    sh ${HOME}/bin/vpn-check.sh > /tmp/bar/vpn
    
    ping -c 1 -D -L -n -q -s 1 -w 10 8.8.8.8 > /dev/null 2>&1
    [ $? -eq 0 ] &&
        tmpwifi="\\uf1eb" ||
        tmpwifi="\\uf467"
    echo -n $tmpwifi > /tmp/bar/wifi

    if [ $(pgrep mpv) ] || [ $(pgrep mpd) ]; then
        tmpsong=$(bash ${HOME}/bin/get-song.sh $max_song_length '')
        echo -n $tmpsong > /tmp/bar/song
    elif [ -f /tmp/bar/song ] ; then
        rm /tmp/bar/song -- > /dev/null 2>&1
    fi
    sleep 5
} done > /dev/null 2>&1 &

sh -c "while sh ${HOME}/bin/battery-check.sh > /tmp/bar/bat
    do sleep 30
done" > /dev/null 2>&1 &

sh -c "while date '+%l:%M %p' > /tmp/bar/date
    do sleep 59
done" > /dev/null 2>&1 &
# ──────────────────────────────────────────────── #

# ───────────────── Fonts ─────────────────────────────── #
font1="Terminus:size=12"
# font2="FontAwesome:size=12"
font2="Siji:size=12"
font3="tewi:size=12"
font4="TerminusTTF Nerd Font:size=12"
# font5="xos4 Terminus:size=10"
font5="tewi:size=12"
# ─────────────────────────────────────────────────────── #

while \
    printf " %s%b%s%b%b%b%b%s \\n" \
        "$(wksp)$(< /tmp/bar/wksp)%{-u} " \
        "%{T4}$(layout)" \
        "%{c}%{F$color2}%{T5}$(< /tmp/bar/song)%{F-}" \
        "%{r}%{T2}%{T4} $(< /tmp/bar/bat) " \
        "$(< /tmp/bar/wifi) " \
        "$(< /tmp/bar/vpn) " \
        "%{T3}$(< /tmp/bar/vol) " \
        "%{F$color2}%{T5}$(< /tmp/bar/date) %{T-}%{F-}" 

    do sleep 0.5
done 2> /dev/null | \

lemonbar -db \
         -f "$font1" \
         -f "$font2" \
         -f "$font3" \
         -f "$font4" \
         -f "$font5" \
         -g "$w"x"$h"+$x+$y \
         -n "bar" \
         -u "$underline_pix" \
         -U "$color2" \
         -B "$color0" \
         -F "$color1" \
         -a "$clickable_areas" > /dev/null 2>&1
