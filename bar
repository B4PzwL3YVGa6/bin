#!/usr/bin/env bash
 
# ────────────── init ──────────────────────────────────── #
. ${HOME}/.cache/wal/colors.sh

underline_pix=6
clickable_areas=0
if test sysctl ; then
    case "$(sysctl -n hw.version)" in
        "ThinkPad X200s") max_song_length=61 ;;
        "ThinkPad T500") max_song_length=90 ;;
    esac
fi

DIM=$(xrandr | grep \* |awk '{print $1}')
s_width="$(sed 's/x.*//' <<< "$DIM")"
s_height="$(sed 's/^[^x]*x//' <<< "$DIM")"

gap=$(< /tmp/dwm_info/gappx)
w=$(echo "$s_width - $gap * 2" | bc)
h=$(echo "$(< /tmp/dwm_info/bar_height) - $gap / 1.125" | bc)
x=$gap
y=$(echo "$gap / 1.25" | bc)

rm -rf /tmp/bar > /dev/null 2>&1
mkdir /tmp/bar > /dev/null 2>&1
tmp=$(sh ${HOME}/bin/BSDNixVolume.sh -get)
if [ $tmp -gt 48 ] ; then 
    echo -n "\\uf028%{T3} $tmp%%{T-}" > /tmp/bar/vol
elif [ $tmp -gt 0 ] ; then
    echo -n "\\uf027%{T3} $tmp%%{T-}" > /tmp/bar/vol
else 
    echo -n "\\uf026" > /tmp/bar/vol
fi
if [ $(uname) == Linux ] ; then
    INTERFACE="wlan0"
else # BSD
    INTERFACE="iwn0"
fi
# ─────────────────────────────────────────────────────── #

layout() { 
    case $(< /tmp/dwm_info/current_layout) in
        "0") echo -n "\\uf44e" ;; # tiled
        "1") echo -n "F" ;; # floating
        "2") echo -n "M" ;; # monocle
        "3") echo -n "G" ;; # grid
        "4") echo -n "CMC" ;; # center master
        "5") echo -n "CFM" ;; # center floating master
        "6") echo -n "VVV" ;; # fibonacci
        "7") echo -n "DDD" ;; # top master
    esac
}
echo 1 > /tmp/dwm_info/check
wksp() {
    if [ $(< /tmp/dwm_info/check) -eq 1 ] ; then
        for i in {1..6} ; do
            if [ $(< /tmp/dwm_info/ws"$i") -eq 1 ] ; then
                ws=" %{F$color2}$i%{F-} "
            else
                ws=" $i "
            fi

            if [ $(< /tmp/dwm_info/current_ws) -eq $i ] ; then
                ws="%{+u}$ws"
            else
                ws="%{-u}$ws"
            fi
            buffer=$buffer$ws
        done
        echo -n "$buffer" > /tmp/bar/wksp
        echo 0 > /tmp/dwm_info/check
    fi
}

# ────────── background processes ──────────────── #
while true ; do {
    dash ${HOME}/bin/vpn-check.sh > /tmp/bar/vpn
    
    ping -c 1 -D -L -n -q -s 1 -w 10 8.8.8.8 > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
        tmpwifi="\\uf1eb" # YES
    else
        tmpwifi="\\uf467" # NO
    fi
    echo -n $tmpwifi > /tmp/bar/wifi

    if [ $(pgrep mpv) ] ; then
        tmpsong=$(bash ${HOME}/bin/get-song.sh $max_song_length '')
        echo -n $tmpsong > /tmp/bar/song
    elif [ -f /tmp/bar/song ] ; then
        rm /tmp/bar/song
    fi
    sleep 5
} done > /dev/null 2>&1 &
dash -c "while dash ${HOME}/bin/battery-check.sh > /tmp/bar/bat
    do sleep 30
done" > /dev/null 2>&1 &
dash -c "while date '+%l:%M %p' > /tmp/bar/date
    do sleep 59
done" > /dev/null 2>&1 &
# ──────────────────────────────────────────────── #

while \
    printf " %s%b%s%b%b%b%b%s \\n" \
        "$(wksp)$(< /tmp/bar/wksp)%{-u} " \
        "$(layout)" \
        "%{c}%{F$color2}%{T4}$(< /tmp/bar/song)%{F-}" \
        "%{r}%{T2} $(< /tmp/bar/bat) " \
        "$(< /tmp/bar/wifi) " \
        "$(< /tmp/bar/vpn) " \
        "$(< /tmp/bar/vol)" \
        "%{F$color2}%{T5}$(< /tmp/bar/date) %{T-}%{F-}" 

    do sleep 0.5
done | \

lemonbar -db \
         -f "RobotoMono Nerd Font Mono:size=12" \
         -f "FontAwesome:size=14" \
         -f "tewi:size=16" \
         -f "RobotoMono Nerd Font Mono:size=10" \
         -f "Droid Sans Mono:size=10" \
         -g "$w"x"$h"+$x+$y \
         -n "bar" \
         -u "$underline_pix" \
         -U "$color2" \
         -B "$color0" \
         -F "$color1" \
         -a "$clickable_areas" > /dev/null 2>&1
