#!/bin/sh
#
# https://github.com/MitchWeaver/dedit
#
# dedit: Use dmenu to open and edit a file from a given list.

# ------------- CONFIGURATION -------------------------- #
# folders you wish to source
# These are some of mine, just for examples
FOLDERS="${HOME}/workspace/dotfiles/commonly_edited \
         ${HOME}/workspace/dotfiles/.config \
         ${HOME}/bin \
         ${HOME}/downloads \
         ${HOME}/tmp \
         ${HOME}/files"

# files you dont want to see in dmenu
# Doesn't work on BSD
if [ "$(uname)" = "Linux" ] ; then
    IGNORE="-I *.bak \
            -I *.temp \
            -I *.tmp \
            -I *.history \
            -I *.viminfo \
            -I .bash_history \
            -I *.serverauth \
            -I .Xauthority \
            -I .lesshst \
            -I .python_history \
            -I .zsh_history \
            -I .recently-used \
            -I .wget-hsts \
            -I .zsh-update \
            -I .git \
            -I .gitignore \
            -I .gitconfig"
else
    IGNORE=""
fi

# change this to your editor and/or terminal emulator
EDITOR="st -e nvim"

# place your custom dmenu arguments here:
# DMENU="${HOME}/bin/dmenu.sh -l 10 -i"
# ------------------------------------------------------ #

# if command line args are specified, dmenu will run with those instead
# if [ $# -gt 0 ] ; then
    # DMENU='${HOME}/bin/dmenu.sh "$@"'
# fi

# Import the colors
. "${HOME}/.cache/wal/colors.sh"

# note: the --current option makes this much faster.
DIM=$(xrandr --current | grep \* | awk '{print $1}')
sw=$(echo "$DIM" | sed 's/x.*//') # screen width
sh=$(echo "$DIM" | sed 's/^[^x]*x//') # screen height

w=$(echo "$sw / 1.5" | bc) # width
x=$(echo "$sw / 2 - $w / 2" | bc) # x-offset
y=$(echo "$sh / 6" | bc) # y-offset
# h=$(echo "$sh / 40" | bc) # height
h=$(echo "$sh / 50" | bc) # height

DMENU="dmenu -l $h -nb $color0 -nf $color15 -sb $color2 -sf $color15 -x $x -y $y -wi $w"

if [ "$(uname)" = "Linux" ] ; then
    SELECTION=$(ls $IGNORE -HBLap ${FOLDERS} | grep -v / | $DMENU -p 'File to edit:')
else
    SELECTION=$(ls $IGNORE -HLap ${FOLDERS} | grep -v / | $DMENU -p 'File to edit:')
fi

# As is, this checks to see if a file exists before running the editor
# ---- You can delete this except for the $EDITOR line in order to create new files
if [ $SELECTION ]; then
    for folder in $FOLDERS ; do
        if [ -f $folder/"$SELECTION" ] ; then
            $EDITOR $folder/"$SELECTION" ; exit
        fi
    done
fi
